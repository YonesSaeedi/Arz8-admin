name: Laravel CI/CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy_backend:
    name: Deploy Laravel Backend
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[backend]') || !contains(github.event.head_commit.message, '[frontend]')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # دریافت تمام history برای بررسی تغییرات

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Check Server Connection
        run: |
          echo "Testing SSH connection..."
          ssh -o StrictHostKeyChecking=no -p 3031 cp38729@65.21.239.21 "
            echo '=== SERVER INFO ==='
            echo 'Server time: $(date)'
            echo 'Current user: $(whoami)'
            echo 'PHP version:'
            /usr/local/php82/bin/php82 --version
            echo 'Composer version:'
            /usr/local/bin/composer --version 2>/dev/null || echo 'Composer not installed'
            echo 'Target directory:'
            ls -ld /home/cp38729/domains/arz8x.com/saeedi-admin 2>/dev/null || echo 'Directory does not exist'
          "

      - name: Deploy Laravel
        run: |
          TARGET_DIR="/home/cp38729/domains/arz8x.com/saeedi-admin"
          CURRENT_BRANCH="${GITHUB_REF##*/}"

          echo "Deploying branch: $CURRENT_BRANCH to $TARGET_DIR"

          ssh -o StrictHostKeyChecking=no -p 3031 cp38729@65.21.239.21 "
            # نصب کامپوزر اگر وجود ندارد
            if ! command -v composer &> /dev/null; then
              echo 'Installing Composer...'
              curl -sS https://getcomposer.org/installer | /usr/local/php82/bin/php82
              mv composer.phar /usr/local/bin/composer
              chmod +x /usr/local/bin/composer
            fi

            # اطمینان از وجود دایرکتوری
            if [ ! -d '$TARGET_DIR' ]; then
              echo 'Creating target directory...'
              mkdir -p '$TARGET_DIR'
            fi

            cd '$TARGET_DIR'

            # بررسی اینکه آیا این یک ریپو git است
            if [ ! -d .git ]; then
              echo 'Initializing git repository...'
              git init
              git remote add origin https://github.com/${{ github.repository }}.git
            fi

            # تنظیمات git
            git config --global --add safe.directory '$TARGET_DIR'
            git config user.name 'GitHub Actions'
            git config user.email 'actions@github.com'

            # دریافت تغییرات
            echo 'Fetching latest changes...'
            git fetch origin --force
            echo 'Checking out branch...'
            git checkout --force '$CURRENT_BRANCH'
            echo 'Resetting to origin...'
            git reset --hard origin/'$CURRENT_BRANCH'
            echo 'Pulling latest changes...'
            git pull origin '$CURRENT_BRANCH' --force

            # نصب dependencies
            echo 'Installing Composer dependencies...'
            /usr/local/php82/bin/php82 /usr/local/bin/composer install --no-dev --optimize-autoloader --no-interaction --no-progress

            # پاکسازی کش‌ها
            echo 'Clearing caches...'
            /usr/local/php82/bin/php82 artisan optimize:clear
            /usr/local/php82/bin/php82 artisan cache:clear
            /usr/local/php82/bin/php82 artisan config:clear
            /usr/local/php82/bin/php82 artisan route:clear
            /usr/local/php82/bin/php82 artisan view:clear

            # بازسازی کش‌ها
            echo 'Caching configurations...'
            /usr/local/php82/bin/php82 artisan config:cache
            /usr/local/php82/bin/php82 artisan route:cache
            /usr/local/php82/bin/php82 artisan view:cache

            # migrate دیتابیس
            echo 'Running migrations...'
            /usr/local/php82/bin/php82 artisan migrate --force

            # ایجاد لینک storage
            if [ ! -L "public/storage" ]; then
              echo 'Creating storage link...'
              /usr/local/php82/bin/php82 artisan storage:link
            fi

            # تنظیم permissions
            echo 'Setting permissions...'
            chmod -R 755 storage bootstrap/cache public
            chown -R cp38729:cp38729 '$TARGET_DIR'

            # restart سرویس PHP (اگر ممکن است)
            sudo -S systemctl reload php-fpm 2>/dev/null || echo 'PHP-FPM reload skipped (no permissions)'

            echo 'Deployment completed successfully!'
          "

      - name: Verify Deployment
        run: |
          TARGET_DIR="/home/cp38729/domains/arz8x.com/saeedi-admin"
          ssh -o StrictHostKeyChecking=no -p 3031 cp38729@65.21.239.21 "
            cd '$TARGET_DIR'
            echo '=== DEPLOYMENT VERIFICATION ==='
            echo 'Current branch:'
            git branch --show-current
            echo 'Last commit:'
            git log -1 --oneline
            echo 'Git status:'
            git status --short
            echo 'File modification times:'
            ls -la --full-time | head -10
            echo 'Environment:'
            /usr/local/php82/bin/php82 artisan env
            echo 'App version:'
            /usr/local/php82/bin/php82 artisan --version
          "
  build_frontend:
    name: Build & Deploy Vue 2
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[frontend]') || !contains(github.event.head_commit.message, '[backend]')

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js 14
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Clean installation
        run: |
          rm -rf node_modules public/js public/css
          npm cache clean --force

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install --legacy-peer-deps --prefer-offline --no-audit

      - name: Install root dependencies
        working-directory: ./
        run: npm install --legacy-peer-deps --prefer-offline --no-audit

      - name: Build production assets
        run: npm run prod

      - name: Verify built assets
        run: |
          ls -la public/js/
          ls -la public/css/

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clean remote directory
        run: |
          ssh -p 3031 -o StrictHostKeyChecking=no root@65.21.239.21 "
            find /home/cp38729/domains/arz8x.com/admin/ -mindepth 1 ! -name 'index.php' -delete &&
            rm -rf /home/cp38729/domains/arz8x.com/saeedi-admin/frontend/*
          "

      - name: Upload built assets
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 65.21.239.21
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 3031
          source: "public/*"
          target: "/home/cp38729/domains/arz8x.com/admin"
          strip_components: 1
